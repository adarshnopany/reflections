When would you want to use a remote repository rather than keeping all your work
local?

We will want to use a remote repository rather than keeping all my work local when
I want to submit all my changes in the internet SPECIFICALLY for public viewing,
so that they can review my code and possibly administer changes to it. This is it!


Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

That is because there might be cases when we are just testing something with our code in GitHub and are not yet ready to
send our changes to our local machine, so its good for Git not to automatically pull all changes from GitHub to my local
computer.

Describe the differences between forks, clones, and branches.  
When would you use one instead of another?

Forks are used when we copy one Repository from GitHub onto GitHub.
Clones are those when we copy one Repository from GitHub onto our local machines.
Branches are those which are new commits made in the same Repository.
Its pretty evident when we will use which option.

What is the benefit of having a copy of the last known state of the remote
stored locally?

It is beneficial to have a copy of the last known state of the remote repository on our local computer because
that will act the place till where we have synced our local repo with the GitHub one. So all the changes introduced
after that will then be updated and the latest commit will get the invisible "origin/master" label.

How would you collaborate without using Git or GitHub?  
What would be easier,
and what would be harder?

It will be very much difficult to collaborate without using GitHub. First of all, we will have to share the entire project to the other person
to review changes. Secondly, it will be very time consuming because they will have to first download the entire thing into their computer and
deal with the changes.
The easier part would be that it will pay off without learning much, as learning GitHub for the first time may sound like a tricky and difficult thing,
but the harder part would be that it will be time consuming and not as effective as GitHub is.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

We would want to make changes to a separate branch rather than directly in master when we are unsure about the consequences of the change.
If we think that the changes may break our master then we may create another branch.
Both carry their own benefits.
If we make changes to the master branch itself then it is good as we will have less work to do which is saved by not pulling requests and all that.
Whereas having seperate branches and working on it is good in the sense that we will not worry about breaking the master branch.